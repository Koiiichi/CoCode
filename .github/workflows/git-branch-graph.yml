name: Git Branch Graph & Status

on:
  push:
    branches:
      - "**"  # Triggers on every branch push

jobs:
  branch-graph:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history to generate a complete graph

      - name: Generate Branch Graph and Status
        id: generate
        run: |
          # Generate branch graph (commits, branches, and relationships)
          echo "Generating branch graph..."
          BRANCH_GRAPH=$(git log --oneline --graph --decorate --all)
          
          # Generate branch ahead/behind status relative to main
          echo "Generating branch status..."
          BRANCH_STATUS=$(git for-each-ref --format="%(refname:short) %(upstream:track)" refs/heads/)
          
          # Append the outputs to the GitHub Actions Summary for easy viewing
          echo "### 🛠️ Git Branch Structure" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "$BRANCH_GRAPH" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

          echo "### 📌 Branch Commit Status" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "$BRANCH_STATUS" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

          # Set outputs for later steps
          echo "graph<<EOF" >> $GITHUB_OUTPUT
          echo "$BRANCH_GRAPH" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          echo "status<<EOF" >> $GITHUB_OUTPUT
          echo "$BRANCH_STATUS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Send Branch Graph & Status to Discord
        if: ${{ secrets.DISCORD_BRANCHUPDATE_WEBHOOK_URL != '' }}
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_BRANCHUPDATE_WEBHOOK_URL }}
        run: |
          echo "Preparing payload for Discord..."
          # Convert outputs to JSON safe strings using jq (jq is pre-installed)
          GRAPH_JSON=$(echo "${{ steps.generate.outputs.graph }}" | jq -Rs .)
          STATUS_JSON=$(echo "${{ steps.generate.outputs.status }}" | jq -Rs .)
          
          # Construct JSON payload with an embedded message
          PAYLOAD=$(jq -n \
            --arg graph "$GRAPH_JSON" \
            --arg status "$STATUS_JSON" \
            '{
              embeds: [{
                title: "Git Branch Graph & Status",
                description: (
                  "**Branch Structure:**\n```" + $graph + "```\n" +
                  "**Ahead/Behind Status:**\n```" + $status + "```"
                ),
                color: 3447003
              }]
            }'
          )
          
          echo "Sending payload to Discord..."
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "$PAYLOAD" \
               "$DISCORD_WEBHOOK_URL"
